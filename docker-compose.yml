version: '3'

services:
  web:
    build: .
    ports:
      - "3000:3000"
    volumes:
      - .:/usr/src/app
    env_file:
      - .env/development/web
      - .env/development/database
    environment:
      - WEBPACKER_DEV_SERVER_HOST=webpack_dev_server   # <label id="chapter.playing-nice-with-javascript.docker-compose.web.env_webpacker_dev_server_host" /> 

  webpack_dev_server:
    build: .                          # <label id="chapter.playing-nice-with-javascript.docker-compose.webpack-dev-server.build" />
    command: ./bin/webpack-dev-server # <label id="chapter.playing-nice-with-javascript.docker-compose.webpack-dev-server.command" />
    ports:
      - 3035:3035                   # <label id="chapter.playing-nice-with-javascript.docker-compose.webpack-dev-server.port" />
    volumes:
      - .:/usr/src/app              # <label id="chapter.playing-nice-with-javascript.docker-compose.webpack-dev-server.volume" />
    env_file:                       # <label id="chapter.playing-nice-with-javascript.docker-compose.webpack-dev-server.start_env" />
      - .env/development/web
      - .env/development/database   # <label id="chapter.playing-nice-with-javascript.docker-compose.webpack-dev-server.end_env" />
    environment:
      - WEBPACKER_DEV_SERVER_HOST=0.0.0.0 # <label id="chapter.playing-nice-with-javascript.docker-compose.webpack-dev-server.env_all_ips" /> 

  redis:
    image: redis

  database:
    image: postgres
    env_file:
      - .env/development/database
    volumes:
      - db_data:/var/lib/postgresql/data

volumes:
  db_data: